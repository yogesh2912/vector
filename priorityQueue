// Online C++ compiler to run C++ program online
#include <iostream>
#include<bits/stdc++.h>

struct Student {
    int age;
    std::string name;
    
    Student(int i,std::string s) {
        age = i;
        name = s;
    }
};

struct Comparator {
    bool operator()(const Student &s1,const Student &s2) {
        return s1.age < s2.age;
    }
};

// function based comporator does not work in priority queue
bool myf(const Student &s1,const Student &s2) {
    return s1.age<s2.age;
}


using namespace std;
int main() {
   priority_queue<int> pq;
   pq.push(34);
   pq.push(32);
    pq.push(53);
    pq.push(92);
    pq.push(12);
    cout<<"Basic priority queue"<<endl;
    while(!pq.empty()) {
        auto at = pq.top();
        pq.pop();
        cout<<at<<" ";
    }
    cout<<endl;
    
    priority_queue<int,vector<int>, greater<int> > pq1;
   pq1.push(34);
   pq1.push(32);
    pq1.push(53);
    pq1.push(92);
    pq1.push(12);
    cout<<"Basic priority queue with increasing order "<<endl;
    while(!pq1.empty()) {
        auto at = pq1.top();
        pq1.pop();
        cout<<at<<" ";
    }
    
    priority_queue<Student,vector<Student>, Comparator > pqs;
    Student *yogesh  = new Student(4,"Yogesh");
    Student *ram  = new Student(9,"Ram");
    Student *shyam  = new Student(2,"Shyam");
    
    pqs.push(*yogesh);
    pqs.push(*ram);
    pqs.push(*shyam);
    
    while(!pqs.empty()) {
        auto at = pqs.top();
        pqs.pop();
        cout<<"Name : "<<at.name<<" age : "<<at.age<<endl; 
    }
}
